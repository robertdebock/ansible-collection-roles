---
# tasks file for dsvpn

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install requirements
  ansible.builtin.package:
    name: "{{ dsvpn_requirements }}"
    state: present

- name: Unarchive
  ansible.builtin.unarchive:
    src: "{{ dsvpn_release_url }}"
    dest: "{{ dsvpn_temporary_directory }}"
    remote_src: true
    creates: "{{ dsvpn_temporary_directory }}/dsvpn-{{ dsvpn_version }}"
    mode: "0755"

- name: Make
  community.general.make:
    chdir: "{{ dsvpn_temporary_directory }}/dsvpn-{{ dsvpn_version }}"

- name: Install
  ansible.builtin.copy:
    src: "{{ dsvpn_temporary_directory }}/dsvpn-{{ dsvpn_version }}/dsvpn"
    dest: "{{ dsvpn_install_directory }}/dsvpn"
    remote_src: true
    mode: "750"

- name: Generate key
  ansible.builtin.command:
    cmd: dd if=/dev/urandom of={{ dsvpn_key_directory }}/vpn.key count=1 bs=32
    creates: "{{ dsvpn_key_directory }}/vpn.key"
  delegate_to: localhost

- name: Set permissions on key
  ansible.builtin.file:
    path: "{{ dsvpn_key_directory }}/vpn.key"
    mode: "644"
  delegate_to: localhost

- name: Copy key
  ansible.builtin.copy:
    src: "{{ dsvpn_key_directory }}/vpn.key"
    dest: "{{ dsvpn_key_directory }}/vpn.key"
    mode: "640"
    owner: root
    group: root
  notify:
    - Restart dsvpn-server
    - Restart dsvpn-client

- name: Load tun module
  community.general.modprobe:
    name: tun
    state: present
  when:
    - ansible_connection not in [ "container", "docker", "community.docker.docker" ]

- name: Create /dev/net directory
  ansible.builtin.file:
    path: /dev/net
    state: directory
    mode: "0755"

- name: Create character device /dev/net/tun
  ansible.builtin.command:
    cmd: mknod /dev/net/tun c 10 200
    creates: /dev/net/tun

- name: Create server
  ansible.builtin.include_tasks:
    file: server.yml
  when:
    - dsvpn_role == "server"

- name: Create client
  ansible.builtin.include_tasks:
    file: client.yml
  when:
    - dsvpn_role == "client"
