---
# tasks file for zabbix_server

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Install zabbix-server requirements
  ansible.builtin.package:
    name: "{{ zabbix_server_requirements }}"
    state: present

- name: Install zabbix_server
  ansible.builtin.package:
    name:
      - zabbix-server-mysql
      - zabbix-sql-scripts
    state: present

- name: Unarchive zabbix schema
  ansible.builtin.command:
    cmd: gunzip /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
    creates: /usr/share/zabbix-sql-scripts/mysql/server.sql
  notify:
    - Import zabbix schema
    - Restart zabbix_server
  loop_control:
    label: "{{ item.path }}"

- name: Configure selinux
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
  block:
    - name: Set selinux settings for zabbix_server
      ansible.posix.seboolean:
        name: "{{ item }}"
        state: yes
        persistent: yes
      loop:
        - httpd_can_connect_zabbix
        - httpd_can_network_connect_db
        - zabbix_can_network

    - name: Place selinux type enforcement
      ansible.builtin.copy:
        src: my-zabbixserver.te
        dest: /etc/zabbix/my-zabbixserver.te
        mode: "0644"
      notify:
        - Create selinux mod for zabbix_server
        - Create selinux pp for zabbix_server
        - Load selinux pp for zabbix_server

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Configure zabbix_server
  ansible.builtin.template:
    src: zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
    mode: "0644"
  notify:
    - Restart zabbix_server

- name: Start and enable zabbix_server
  ansible.builtin.service:
    name: zabbix-server
    state: started
    enabled: yes
  when:
    - not ci
  vars:
    ci: "{{ lookup('env', 'CI') }}"
