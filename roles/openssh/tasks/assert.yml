---

- name: assert | Test if ssh_port is set correctly
  ansible.builtin.assert:
    that:
      - openssh_port is defined
      - openssh_port is number
      - openssh_port > 0
      - openssh_port < 65536
    quiet: yes

- name: assert | Test if openssh_address_family is set correctly
  ansible.builtin.assert:
    that:
      - openssh_address_family is defined
      - openssh_address_family is string
      - openssh_address_family in [ "any", "inet", "inet6" ]
    quiet: yes

- name: assert | Test if openssh_listen_addresses is set correctly
  ansible.builtin.assert:
    that:
      - openssh_listen_addresses is defined
      - openssh_listen_addresses is iterable
    quiet: yes

- name: assert | Test if openssh_host_keys is set correctly
  ansible.builtin.assert:
    that:
      - openssh_host_keys is defined
      - openssh_host_keys is iterable
    quiet: yes

- name: assert | Test if openssh_rekey_limit is set correctly
  ansible.builtin.assert:
    that:
      - openssh_rekey_limit is defined
      - openssh_rekey_limit is string
      - openssh_rekey_limit is not none
    quiet: yes

- name: assert | Test if openssh_syslog_facility is set correctly
  ansible.builtin.assert:
    that:
      - openssh_syslog_facility is defined
      - openssh_syslog_facility is string
      - openssh_syslog_facility in [ "DAEMON", "USER", "AUTH", "LOCAL0", "LOCAL1", "LOCAL2", "LOCAL3", "LOCAL4", "LOCAL5", "LOCAL6", "LOCAL7" ]
    quiet: yes

- name: assert | Test if openssh_loglevel is set correctly
  ansible.builtin.assert:
    that:
      - openssh_loglevel is defined
      - openssh_loglevel is string
      - openssh_loglevel in [ "QUIET", "FATAL", "ERROR", "INFO", "VERBOSE", "DEBUG", "DEBUG1", "DEBUG2", "DEBUG3" ]
    quiet: yes

- name: assert | Test if openssh_login_grace_time is set correctly
  ansible.builtin.assert:
    that:
      - openssh_login_grace_time is defined
      - openssh_login_grace_time is string
      - openssh_login_grace_time is not none
    quiet: yes

- name: assert | Test if openssh_permit_root_login is set correctly
  ansible.builtin.assert:
    that:
      - openssh_permit_root_login is defined
      - openssh_permit_root_login is string
      - openssh_permit_root_login in [ "yes", "no", "without-password", "prohibit-password", "forced-commands-only" ]
    quiet: yes

- name: assert | Test if openssh_strict_modes is set correctly
  ansible.builtin.assert:
    that:
      - openssh_strict_modes is defined
      - openssh_strict_modes is string
      - openssh_strict_modes in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_max_auth_tries is set correctly
  ansible.builtin.assert:
    that:
      - openssh_max_auth_tries is defined
      - openssh_max_auth_tries is number
      - openssh_max_auth_tries >= 0
    quiet: yes

- name: assert | Test if openssh_max_sessions is set correctly
  ansible.builtin.assert:
    that:
      - openssh_max_sessions is defined
      - openssh_max_sessions is number
      - openssh_max_sessions >= 0
    quiet: yes

- name: assert | Test if openssh_pub_key_authentication is set correctly
  ansible.builtin.assert:
    that:
      - openssh_pub_key_authentication is defined
      - openssh_pub_key_authentication is string
      - openssh_pub_key_authentication in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_authorized_key_file is set correctly
  ansible.builtin.assert:
    that:
      - openssh_authorized_key_file is defined
      - openssh_authorized_key_file is string
      - openssh_authorized_key_file is not none
    quiet: yes

- name: assert | Test if openssh_authorized_prinicpals_file is set correctly
  ansible.builtin.assert:
    that:
      - openssh_authorized_prinicpals_file is defined
      - openssh_authorized_prinicpals_file is string
      - openssh_authorized_prinicpals_file is not none
    quiet: yes

- name: assert | Test if openssh_authorized_keys_command is set correctly
  ansible.builtin.assert:
    that:
      - openssh_authorized_keys_command is defined
      - openssh_authorized_keys_command is string
      - openssh_authorized_keys_command is not none
    quiet: yes

- name: assert | Test if openssh_authorized_keys_command_user is set correctly
  ansible.builtin.assert:
    that:
      - openssh_authorized_keys_command_user is defined
      - openssh_authorized_keys_command_user is string
      - openssh_authorized_keys_command_user is not none
    quiet: yes

- name: assert | Test if openssh_host_based_authentication is set correctly
  ansible.builtin.assert:
    that:
      - openssh_host_based_authentication is defined
      - openssh_host_based_authentication is string
      - openssh_host_based_authentication in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_ignore_user_known_hosts is set correctly
  ansible.builtin.assert:
    that:
      - openssh_ignore_user_known_hosts is defined
      - openssh_ignore_user_known_hosts is string
      - openssh_ignore_user_known_hosts in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_ignore_rhosts is set correctly
  ansible.builtin.assert:
    that:
      - openssh_ignore_rhosts is defined
      - openssh_ignore_rhosts is string
      - openssh_ignore_rhosts in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_permit_empty_passwords is set correctly
  ansible.builtin.assert:
    that:
      - openssh_permit_empty_passwords is defined
      - openssh_permit_empty_passwords is string
      - openssh_permit_empty_passwords in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_password_authentication is set correctly
  ansible.builtin.assert:
    that:
      - openssh_password_authentication is defined
      - openssh_password_authentication is string
      - openssh_password_authentication in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_challenge_response_authentication is set correctly
  ansible.builtin.assert:
    that:
      - openssh_challenge_response_authentication is defined
      - openssh_challenge_response_authentication is string
      - openssh_challenge_response_authentication in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_gssapi_authentication is set correctly
  ansible.builtin.assert:
    that:
      - openssh_gssapi_authentication is defined
      - openssh_gssapi_authentication is string
      - openssh_gssapi_authentication in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_gssapi_cleanup_credentials is set correctly
  ansible.builtin.assert:
    that:
      - openssh_gssapi_cleanup_credentials is defined
      - openssh_gssapi_cleanup_credentials is string
      - openssh_gssapi_cleanup_credentials in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_gssapi_strict_acceptor_check is set correctly
  ansible.builtin.assert:
    that:
      - openssh_gssapi_strict_acceptor_check is defined
      - openssh_gssapi_strict_acceptor_check is string
      - openssh_gssapi_strict_acceptor_check in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_gssapi_key_exchange is set correctly
  ansible.builtin.assert:
    that:
      - openssh_gssapi_key_exchange is defined
      - openssh_gssapi_key_exchange is string
      - openssh_gssapi_key_exchange in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_gssaip_enable_k5_users is set correctly
  ansible.builtin.assert:
    that:
      - openssh_gssaip_enable_k5_users is defined
      - openssh_gssaip_enable_k5_users is string
      - openssh_gssaip_enable_k5_users in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_use_pam is set correctly
  ansible.builtin.assert:
    that:
      - openssh_use_pam is defined
      - openssh_use_pam is string
      - openssh_use_pam in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_allow_agent_forwarding is set correctly
  ansible.builtin.assert:
    that:
      - openssh_allow_agent_forwarding is defined
      - openssh_allow_agent_forwarding is string
      - openssh_allow_agent_forwarding in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_allow_tcp_forwarding is set correctly
  ansible.builtin.assert:
    that:
      - openssh_allow_tcp_forwarding is defined
      - openssh_allow_tcp_forwarding is string
      - openssh_allow_tcp_forwarding in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_gateway_ports is set correctly
  ansible.builtin.assert:
    that:
      - openssh_gateway_ports is defined
      - openssh_gateway_ports is string
      - openssh_gateway_ports in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_x11_forwarding is set correctly
  ansible.builtin.assert:
    that:
      - openssh_x11_forwarding is defined
      - openssh_x11_forwarding is string
      - openssh_x11_forwarding in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_x11_display_offset is set correctly
  ansible.builtin.assert:
    that:
      - openssh_x11_display_offset is defined
      - openssh_x11_display_offset is number
      - openssh_x11_display_offset > 0
    quiet: yes

- name: assert | Test if openssh_x11_use_localhost is set correctly
  ansible.builtin.assert:
    that:
      - openssh_x11_use_localhost is defined
      - openssh_x11_use_localhost is string
      - openssh_x11_use_localhost in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_permit_tty is set correctly
  ansible.builtin.assert:
    that:
      - openssh_permit_tty is defined
      - openssh_permit_tty is string
      - openssh_permit_tty in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_print_motd is set correctly
  ansible.builtin.assert:
    that:
      - openssh_print_motd is defined
      - openssh_print_motd is string
      - openssh_print_motd in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_print_last_log is set correctly
  ansible.builtin.assert:
    that:
      - openssh_print_last_log is defined
      - openssh_print_last_log is string
      - openssh_print_last_log in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_tcp_keep_alive is set correctly
  ansible.builtin.assert:
    that:
      - openssh_tcp_keep_alive is defined
      - openssh_tcp_keep_alive is string
      - openssh_tcp_keep_alive in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_permit_user_environment is set correctly
  ansible.builtin.assert:
    that:
      - openssh_permit_user_environment is defined
      - openssh_permit_user_environment is string
      - openssh_permit_user_environment in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_compression is set correctly
  ansible.builtin.assert:
    that:
      - openssh_compression is defined
      - openssh_compression is string
      - openssh_compression in [ "yes", "no", "delayed" ]
    quiet: yes

- name: assert | Test if openssh_client_alive_interval is set correctly
  ansible.builtin.assert:
    that:
      - openssh_client_alive_interval is defined
      - openssh_client_alive_interval is number
      - openssh_client_alive_interval >= 0
    quiet: yes

- name: assert | Test if openssh_client_alive_count_max is set correctly
  ansible.builtin.assert:
    that:
      - openssh_client_alive_count_max is defined
      - openssh_client_alive_count_max is number
      - openssh_client_alive_count_max >= 0
    quiet: yes

- name: assert | Test if openssh_show_patch_level is set correctly
  ansible.builtin.assert:
    that:
      - openssh_show_patch_level is defined
      - openssh_show_patch_level is string
      - openssh_show_patch_level in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_use_dns is set correctly
  ansible.builtin.assert:
    that:
      - openssh_use_dns is defined
      - openssh_use_dns is string
      - openssh_use_dns in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_pid_file is set correctly
  ansible.builtin.assert:
    that:
      - openssh_pid_file is defined
      - openssh_pid_file is string
      - openssh_pid_file is not none
    quiet: yes

- name: assert | Test if openssh_max_startups is set correctly
  ansible.builtin.assert:
    that:
      - openssh_max_startups is defined
      - openssh_max_startups is string
      - openssh_max_startups is not none
    quiet: yes

- name: assert | Test if openssh_permit_tunnel is set correctly
  ansible.builtin.assert:
    that:
      - openssh_permit_tunnel is defined
      - openssh_permit_tunnel is string
      - openssh_permit_tunnel in [ "yes", "no" ]
    quiet: yes

- name: assert | Test if openssh_chroot_directory is set correctly
  ansible.builtin.assert:
    that:
      - openssh_chroot_directory is defined
      - openssh_chroot_directory is string
      - openssh_chroot_directory is not none
    quiet: yes

- name: assert | Test if openssh_version_addendum is set correctly
  ansible.builtin.assert:
    that:
      - openssh_version_addendum is defined
      - openssh_version_addendum is string
      - openssh_version_addendum is not none
    quiet: yes

- name: assert | Test if openssh_banner is set correctly
  ansible.builtin.assert:
    that:
      - openssh_banner is defined
      - openssh_banner is string
      - openssh_banner is not none
    quiet: yes

- name: assert | Test if openssh_accept_envs is set correctly
  ansible.builtin.assert:
    that:
      - openssh_accept_envs is defined
      - openssh_accept_envs is iterable
    quiet: yes

- name: assert | Test if openssh_subsystem is set correctly
  ansible.builtin.assert:
    that:
      - openssh_subsystem is defined
      - openssh_subsystem is string
      - openssh_subsystem is not none
    quiet: yes

- name: assert | Test if openssh_trusted_user_ca_keys is set correctly
  ansible.builtin.assert:
    that:
      - openssh_trusted_user_ca_keys is defined
      - openssh_trusted_user_ca_keys is string
      - openssh_trusted_user_ca_keys is not none
    quiet: yes
