---

- name: assert | Test lvm_default_pesize
  ansible.builtin.assert:
    that:
      - lvm_default_pesize is defined
    quiet: yes

- name: assert | Test lvm_volume_groups
  ansible.builtin.assert:
    that:
      - lvm_volume_groups is iterable
    quiet: yes
  when:
    - lvm_volume_groups is defined

- name: assert | Test mandatory item in lvm_volume_groups
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.pvs is defined
      - item.pvs is iterable
    quiet: yes
  loop: "{{ lvm_volume_groups }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - lvm_volume_groups is defined

- name: assert | Test item.pesize in lvm_volume_groups
  ansible.builtin.assert:
    that:
      - item.pesize is string or item.pesize is number
      - item.pesize is not none
    quiet: yes
  loop: "{{ lvm_volume_groups }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - lvm_volume_groups is defined
    - item.pesize is defined

- name: assert | Test lvm_logical_volumes
  ansible.builtin.assert:
    that:
      - lvm_logical_volumes is iterable
    quiet: yes
  when:
    - lvm_logical_volumes is defined

- name: assert | Test mandatory item in lvm_logical_volumes
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.vg is defined
      - item.vg is string
      - item.vg is not none
      - item.size is defined
      - item.size is string or item.size is number
      - item.size is not none
    quiet: yes
  loop: "{{ lvm_logical_volumes }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - lvm_logical_volumes is defined

- name: assert | Test item.opts in lvm_logical_volumes
  ansible.builtin.assert:
    that:
      - item.opts is string
      - item.opts is not none
    quiet: yes
  loop: "{{ lvm_logical_volumes }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - lvm_logical_volumes is defined
    - item.opts is defined
