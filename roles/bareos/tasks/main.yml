---
# tasks file for bareos

- name: Include assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Add repository (rpm)
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.baseurl }}"
    gpgcheck: yes
    gpgkey: "{{ item.gpgkey }}"
  loop: "{{ bareos_repositories }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - ansible_pkg_mgr in [ "dnf", "yum" ]

- name: Run tasks on apt based distributions
  when:
    - ansible_pkg_mgr in [ "apt" ]
  block:
    - name: Trust GPG key (apt)
      ansible.builtin.apt_key:
        url: "{{ bareos_gpg_key }}"

    - name: Add repository (apt)
      ansible.builtin.apt_repository:
        repo: "{{ item.repo }}"
        state: present
        filename: "{{ item.name }}"
        update_cache: yes
      loop: "{{ bareos_repositories }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Prevent db installation (deb)
      ansible.builtin.debconf:
        name: bareos-database-common
        question: bareos-database-common/dbconfig-install
        value: "false"
        vtype: boolean
      when:
        - bareos_role == "dir"

- name: Run tasks on zypper based distributions
  when:
    - ansible_pkg_mgr in [ "zypper" ]
  block:
    - name: Import a key from a url
      ansible.builtin.rpm_key:
        key: "{{ bareos_gpg_key }}"

    - name: Add repository (zypper)
      ansible.builtin.zypper_repository:
        name: "{{ item.name }}"
        repo: "{{ item.zypper_repo }}"
      loop: "{{ bareos_repositories }}"
      loop_control:
        label: "{{ item.name }}"

- name: Install packages for {{ bareos_role }}
  ansible.builtin.package:
    name: "{{ bareos_packages }}"

- name: Run database setup scripts
  ansible.builtin.command:
    cmd: "{{ item }}"
    creates: "/var/log/bareos/{{ item | basename }}.log"
  become_user: postgres
  become: yes
  register: bareos_setup_database
  loop: "{{ bareos_dir_install_scripts }}"
  loop_control:
    label: "{{ item | basename }}"
  when:
    - bareos_role == "dir"
  notify:
    - Write results of database setup to file

- name: Run handlers
  ansible.builtin.meta: flush_handlers

- name: Place configurations for fd
  when:
    - bareos_role == "fd"
  notify:
    - Restart service {{ bareos_service }}
  block:
    - name: Place myself.conf for fd
      ansible.builtin.template:
        src: bareos-fd.d/client/myself.conf.j2
        dest: "/etc/bareos/bareos-fd.d/client/myself.conf"
        owner: bareos
        group: bareos
        mode: "0640"

    - name: Place bareos-dir.conf for fd
      ansible.builtin.template:
        src: bareos-fd.d/director/bareos-dir.conf.j2
        dest: "/etc/bareos/bareos-fd.d/director/bareos-dir.conf"
        owner: bareos
        group: bareos
        mode: "0640"

    - name: Place messages for fd
      ansible.builtin.template:
        src: bareos-fd.d/messages/message.conf.j2
        dest: "/etc/bareos/bareos-fd.d/messages/{{ item.name | capitalize }}.conf"
        owner: bareos
        group: bareos
        mode: "0640"
      loop: "{{ bareos_fd_messages }}"
      loop_control:
        label: "{{ item.name }}"

- name: Place bareos-sd.conf for sd
  ansible.builtin.template:
    src: bareos-sd.d/storage/bareos-sd.conf.j2
    dest: "/etc/bareos/bareos-sd.d/storage/bareos-sd.conf"
    owner: bareos
    group: bareos
    mode: "0640"
  notify:
    - Restart service {{ bareos_service }}
  when:
    - bareos_role == "sd"

- name: Place bareos-dir.conf for dir
  ansible.builtin.template:
    src: bareos-dir.d/director/bareos-dir.conf.j2
    dest: "/etc/bareos/bareos-dir.d/director/bareos-dir.conf"
    owner: bareos
    group: bareos
    mode: "0640"
  notify:
    - Restart service {{ bareos_service }}
  when:
    - bareos_role == "dir"

- name: Start service {{ bareos_service }}
  ansible.builtin.service:
    name: "{{ bareos_service }}"
    state: started
    enabled: yes
