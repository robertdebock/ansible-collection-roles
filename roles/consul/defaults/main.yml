---
# defaults file for consul

# You can install consul using a package in this role. If you have installed
# consul manually, set this to `no`.
consul_install_package: yes

# This flag controls the datacenter in which the agent is running.
consul_datacenter: my-dc-1

# This flag provides a data directory for the agent to store state.
consul_data_dir: /opt/consul

# The address to which Consul will bind client interfaces, including the HTTP and DNS servers
consul_client_addr: "0.0.0.0"

# Enables the built-in web UI server and the required HTTP routes.
consul_ui: yes

# This flag is used to control if an agent is in server or client mode.
consul_server: yes

# This flag provides the number of expected servers in the datacenter.
# consul_bootstrap_expect: 3

# Specifies the secret key to use for encryption of Consul network traffic.
# consul_encrypt: "6r73CP0icJrap1tsQ17yuqzVguho4/yz+aI/dkVg2Kk="

# Similar to -join but allows retrying a join until it is successful.
# consul_retry_join:
#   - consul.domain.internal

# The address that should be bound to for internal cluster communications.
# consul_bind_addr: "{{ ansible_default_ipv4.address }}"

# The advertise address is used to change the address that we advertise to other nodes in the cluster.
# consul_advertise_addr: "{{ ansible_default_ipv4.address }}"

# You can define service that Consul should manage.
# consul_services:
#   - name: web
#     tags:
#       - rails
#     port: 80

# In same cases you may not want to start Consul as a service, because you are "bootstrapping" for example.
consule_service_started_and_enabled: yes
