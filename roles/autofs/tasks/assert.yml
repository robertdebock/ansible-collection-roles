---

# TODO: This variable should start with `autofs_`.
- name: assert | Test if slash_replace_char is set correctly
  ansible.builtin.assert:
    that:
      - slash_replace_char is defined
      - slash_replace_char is string
      - slash_replace_char | length in [ 0, 1 ]
    quiet: yes

- name: assert | Test if autofs_maps is set correctly
  ansible.builtin.assert:
    that:
      - autofs_maps is iterable
    quiet: yes
  when:
    - autofs_maps is defined

- name: assert | Test if item in autofs_maps is set correctly
  ansible.builtin.assert:
    that:
      - item.mountpoint is defined
      - item.mountpoint is string
      - item.mountpoint is not none
      - item.directories is defined
      - item.directories is iterable
    quiet: yes
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  when:
    - autofs_maps is defined
    - item.state is undefined or (item.state is defined and item.state == "present")

- name: assert | Test if item name in autofs_maps is set correctly
  ansible.builtin.assert:
    that:
      - item.name is string
      - item.name is regex("^[A-Za-z0-9-_.^]+$")
    quiet: yes
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  when:
    - autofs_maps is defined
    - item.name is defined

- name: assert | Test if item.state in autofs_maps is set correctly
  ansible.builtin.assert:
    that:
      - item.mountpoint is defined
      - item.mountpoint is string
      - item.mountpoint is not none
    quiet: yes
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  when:
    - autofs_maps is defined
    - item.state is defined and item.state == "absent"

- name: assert | Test if options item in autofs_maps is set correctly
  ansible.builtin.assert:
    that:
      - item.options is iterable
    quiet: yes
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  when:
    - autofs_maps is defined
    - item.options is defined
    - item.state is undefined or (item.state is defined and item.state == "present")
