---

- name: assert | Test auditd_buffer_size
  ansible.builtin.assert:
    that:
      - auditd_buffer_size is defined
      - auditd_buffer_size is number
      - auditd_buffer_size >= 0
      - auditd_buffer_size <= 65000
    quiet: true

- name: assert | Test auditd_fail_mode
  ansible.builtin.assert:
    that:
      - auditd_fail_mode is defined
      - auditd_fail_mode is number
      - auditd_fail_mode in [ 0, 1, 2 ]
    quiet: true

- name: assert | Test auditd_maximum_rate
  ansible.builtin.assert:
    that:
      - auditd_maximum_rate is defined
      - auditd_maximum_rate is number
      - auditd_maximum_rate >= 0
    quiet: true

- name: assert | Test auditd_enable_flag
  ansible.builtin.assert:
    that:
      - auditd_enable_flag is defined
      - auditd_enable_flag is number
      - auditd_enable_flag in [ 0, 1, 2 ]
    quiet: true

- name: assert | Test auditd_local_events
  ansible.builtin.assert:
    that:
      - auditd_local_events is defined
      - auditd_local_events is string
      - auditd_local_events in [ "yes", "no" ]
    quiet: true

- name: assert | Test auditd_write_logs
  ansible.builtin.assert:
    that:
      - auditd_write_logs is defined
      - auditd_write_logs is string
      - auditd_write_logs in [ "yes", "no" ]
    quiet: true

- name: assert | Test auditd_log_file
  ansible.builtin.assert:
    that:
      - auditd_log_file is defined
      - auditd_log_file is string
      - auditd_log_file is not none
    quiet: true

- name: assert | Test auditd_log_group
  ansible.builtin.assert:
    that:
      - auditd_log_group is defined
      - auditd_log_group is string
      - auditd_log_group is not none
    quiet: true

- name: assert | Test auditd_log_format
  ansible.builtin.assert:
    that:
      - auditd_log_format is defined
      - auditd_log_format is string
      - auditd_log_format in [ "ENRICHED", "NOLOG", "RAW" ]
    quiet: true

- name: assert | Test auditd_flush
  ansible.builtin.assert:
    that:
      - auditd_flush is defined
      - auditd_flush is string
      - auditd_flush in [ "none", "incremental", "incremental_async", "data", "sync" ]
    quiet: true

- name: assert | Test auditd_freq
  ansible.builtin.assert:
    that:
      - auditd_freq is defined
      - auditd_freq is number
      - auditd_freq >= 0
    quiet: true

- name: assert | Test auditd_max_log_file
  ansible.builtin.assert:
    that:
      - auditd_max_log_file is defined
      - auditd_max_log_file is number
      - auditd_max_log_file > 0
    quiet: true

- name: assert | Test auditd_num_logs
  ansible.builtin.assert:
    that:
      - auditd_num_logs is defined
      - auditd_num_logs is number
      - auditd_num_logs > 0
      - auditd_num_logs < 99
    quiet: true

- name: assert | Test auditd_priority_boost
  ansible.builtin.assert:
    that:
      - auditd_priority_boost is defined
      - auditd_priority_boost is number
      - auditd_priority_boost in [ 0, 1, 2, 3, 4 ]
    quiet: true

- name: assert | Test auditd_name_format
  ansible.builtin.assert:
    that:
      - auditd_name_format is defined
      - auditd_name_format is string
      - auditd_name_format in [ "none", "hostname", "fqd", "numeric", "user" ]
    quiet: true

- name: assert | Test auditd_max_log_file_action
  ansible.builtin.assert:
    that:
      - auditd_max_log_file_action is defined
      - auditd_max_log_file_action is string
      - auditd_max_log_file_action in [ "ignore", "syslog", "suspend", "rotate" ]
    quiet: true

- name: assert | Test auditd_space_left
  ansible.builtin.assert:
    that:
      - auditd_space_left is defined
    quiet: true

- name: assert | Test auditd_space_left_action
  ansible.builtin.assert:
    that:
      - auditd_space_left_action is defined
      - auditd_space_left_action is string
      - auditd_space_left_action in [ "ignore", "syslog", "rotate", "email", "exec", "suspend", "single", "halt" ]
    quiet: true

- name: assert | Test auditd_verify_email
  ansible.builtin.assert:
    that:
      - auditd_verify_email is defined
      - auditd_verify_email is string
      - auditd_verify_email in [ "yes", "no" ]
    quiet: true

- name: assert | Test auditd_action_mail_acct
  ansible.builtin.assert:
    that:
      - auditd_action_mail_acct is defined
      - auditd_action_mail_acct is string
      - auditd_action_mail_acct is not none
    quiet: true

- name: assert | Test auditd_admin_space_left
  ansible.builtin.assert:
    that:
      - auditd_admin_space_left is defined
      - auditd_admin_space_left is number
      - auditd_admin_space_left >= 0
      - auditd_admin_space_left <= 100
    quiet: true

- name: assert | Test auditd_admin_space_left_action
  ansible.builtin.assert:
    that:
      - auditd_admin_space_left_action is defined
      - auditd_admin_space_left_action is string
      - auditd_admin_space_left_action in [ "ignore", "syslog", "rotate", "email", "exec", "suspend", "single", "halt" ]
    quiet: true

- name: assert | Test auditd_disk_full_action
  ansible.builtin.assert:
    that:
      - auditd_disk_full_action is defined
      - auditd_disk_full_action is string
      - auditd_disk_full_action in [ "ignore", "syslog", "rotate", "exec", "suspend", "single", "halt" ]
    quiet: true

- name: assert | Test auditd_disk_error_action
  ansible.builtin.assert:
    that:
      - auditd_disk_error_action is defined
      - auditd_disk_error_action is string
      - auditd_disk_error_action in [ "ignore", "syslog", "rotate", "exec", "suspend", "single", "halt" ]
    quiet: true

- name: assert | Test auditd_use_libwrap
  ansible.builtin.assert:
    that:
      - auditd_use_libwrap is defined
      - auditd_use_libwrap is string
      - auditd_use_libwrap in [ "yes", "no" ]
    quiet: true

- name: assert | Test auditd_tcp_listen_queue
  ansible.builtin.assert:
    that:
      - auditd_tcp_listen_queue is defined
      - auditd_tcp_listen_queue is number
      - auditd_tcp_listen_queue >= 0
    quiet: true

- name: assert | Test auditd_tcp_max_per_addr
  ansible.builtin.assert:
    that:
      - auditd_tcp_max_per_addr is defined
      - auditd_tcp_max_per_addr is number
      - auditd_tcp_max_per_addr >= 0
      - auditd_tcp_max_per_addr <= 1024
    quiet: true

- name: assert | Test auditd_tcp_client_max_idle
  ansible.builtin.assert:
    that:
      - auditd_tcp_client_max_idle is defined
      - auditd_tcp_client_max_idle is number
      - auditd_tcp_client_max_idle >= 0
    quiet: true

- name: assert | Test auditd_enable_krb5
  ansible.builtin.assert:
    that:
      - auditd_enable_krb5 is defined
      - auditd_enable_krb5 is string
      - auditd_enable_krb5 in [ "yes", "no" ]
    quiet: true

- name: assert | Test auditd_krb5_principal
  ansible.builtin.assert:
    that:
      - auditd_krb5_principal is defined
      - auditd_krb5_principal is string
      - auditd_krb5_principal is not none
    quiet: true

- name: assert | Test auditd_distribute_network
  ansible.builtin.assert:
    that:
      - auditd_distribute_network is defined
      - auditd_distribute_network is string
      - auditd_distribute_network in [ "yes", "no" ]
    quiet: true

- name: assert | Test auditd_manage_rules
  ansible.builtin.assert:
    that:
      - auditd_manage_rules is defined
      - auditd_manage_rules is boolean
    quiet: true

- name: assert | Test auditd_rules
  ansible.builtin.assert:
    that:
      - auditd_rules is iterable
    quiet: true
  when:
    - auditd_rules is defined

- name: assert | Test item.file in auditd_rules
  ansible.builtin.assert:
    that:
      - item.keyname is defined
      - item.keyname is string
      - item.keyname is not none
    quiet: true
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.file | default('none') }}"
  when:
    - auditd_rules is defined
    - item.file is defined

- name: assert | Test item.permission in auditd_rules
  ansible.builtin.assert:
    that:
      - item.permission in [ "attribute_change", "execute", "read", "write" ]
    quiet: true
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.file | default('none') }}"
  when:
    - auditd_rules is defined
    - auditd_rules is string
    - item.permission is defined
    - item.permission is string

- name: assert | Test item in auditd_rules
  ansible.builtin.assert:
    that:
      - item.action is defined
      - item.action is string
      - item.action in [ "always", "never" ]
      - item.filter is defined
      - item.filter is string
      - item.filter in [ "exclude", "exit", "user" ]
    quiet: true
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.syscall | default('none') }}"
  when:
    - auditd_rules is defined
    - auditd_rules is string
    - item.syscall is defined
    - item.syscall is string

- name: assert | Test item.filters in auditd_rules
  ansible.builtin.assert:
    that:
      - item.filters is iterable
    quiet: true
  loop: "{{ auditd_rules }}"
  loop_control:
    label: "{{ item.file | default('none') }}"
  when:
    - auditd_rules is defined
    - auditd_rules is string
    - item.filters is defined
    - item.filters is string

- name: assert | Test auditd_disp_qos
  ansible.builtin.assert:
    that:
      - auditd_disp_qos is defined
      - auditd_disp_qos is string
      - auditd_disp_qos in [ "lossy", "lossless" ]
    fail_msg: "auditd_disp_qos must be one of 'lossy', 'lossless'."
    quiet: true

- name: assert | Test auditd_dispatcher
  ansible.builtin.assert:
    that:
      - auditd_dispatcher is defined
      - auditd_dispatcher is string
      - auditd_dispatcher is not none
    quiet: true
