---

- name: assert | Test dnsmasq_port
  ansible.builtin.assert:
    that:
      - dnsmasq_port is number
      - dnsmasq_port >= 0
      - dnsmasq_port <= 65536
    quiet: true
  when:
    - dnsmasq_port is defined

- name: assert | Test dnsmasq_domain_needed
  ansible.builtin.assert:
    that:
      - dnsmasq_domain_needed is defined
      - dnsmasq_domain_needed is boolean
    quiet: true

- name: assert | Test dnsmasq_bogus_priv
  ansible.builtin.assert:
    that:
      - dnsmasq_bogus_priv is defined
      - dnsmasq_bogus_priv is boolean
    quiet: true

- name: assert | Test dnsmasq_conf_file
  ansible.builtin.assert:
    that:
      - dnsmasq_conf_file is defined
      - dnsmasq_conf_file is string
      - dnsmasq_conf_file is not none
    quiet: true

- name: assert | Test dnsmasq_dnssec
  ansible.builtin.assert:
    that:
      - dnsmasq_dnssec is defined
      - dnsmasq_dnssec is boolean
    quiet: true

- name: assert | Test dnsmasq_dnssec_check_unsigned
  ansible.builtin.assert:
    that:
      - dnsmasq_dnssec_check_unsigned is defined
      - dnsmasq_dnssec_check_unsigned is boolean
    quiet: true

- name: assert | Test dnsmasq_filterwin2k
  ansible.builtin.assert:
    that:
      - dnsmasq_filterwin2k is defined
      - dnsmasq_filterwin2k is boolean
    quiet: true

- name: assert | Test dnsmasq_strict_order
  ansible.builtin.assert:
    that:
      - dnsmasq_strict_order is defined
      - dnsmasq_strict_order is boolean
    quiet: true

- name: assert | Test dnsmasq_no_resolv
  ansible.builtin.assert:
    that:
      - dnsmasq_no_resolv is defined
      - dnsmasq_no_resolv is boolean
    quiet: true

- name: assert | Test dnsmasq_no_poll
  ansible.builtin.assert:
    that:
      - dnsmasq_no_poll is defined
      - dnsmasq_no_poll is boolean
    quiet: true

- name: assert | Test dnsmasq_servers
  ansible.builtin.assert:
    that:
      - dnsmasq_servers is iterable
    quiet: true
  when:
    - dnsmasq_servers is defined

- name: assert | Test item in dnsmasq_servers
  ansible.builtin.assert:
    that:
      - item.nameserver is defined
      - item.nameserver is string
      - item.nameserver is not none
    quiet: true
  loop: "{{ dnsmasq_servers }}"
  when:
    - dnsmasq_servers is defined

- name: assert | Test item.domain in dnsmasq_servers
  ansible.builtin.assert:
    that:
      - item.domain is string
      - item.domain is not none
    quiet: true
  loop: "{{ dnsmasq_servers }}"
  when:
    - dnsmasq_servers is defined
    - item.domain is defined

- name: assert | Test item.port in dnsmasq_servers
  ansible.builtin.assert:
    that:
      - item.port is number
      - item.port >= 0
      - item.port <= 65536
    quiet: true
  loop: "{{ dnsmasq_servers }}"
  when:
    - dnsmasq_servers is defined
    - item.port is defined

- name: assert | Test dnsmasq_locals
  ansible.builtin.assert:
    that:
      - dnsmasq_locals is iterable
    quiet: true
  when:
    - dnsmasq_locals is defined

- name: assert | Test item.domain in dnsmasq_locals
  ansible.builtin.assert:
    that:
      - item.domain is defined
      - item.domain is string
      - item.domain is not none
    quiet: true
  when:
    - dnsmasq_locals is defined

- name: assert | Test dnsmasq_addresses
  ansible.builtin.assert:
    that:
      - dnsmasq_addresses is iterable
    quiet: true
  when:
    - dnsmasq_addresses is defined

- name: assert | Test item in dnsmasq_addresses
  ansible.builtin.assert:
    that:
      - item.domain is defined
      - item.domain is string
      - item.domain is not none
      - item.address is defined
      - item.address is string
      - item.address is not none
    quiet: true
  loop: "{{ dnsmasq_addresses }}"
  when:
    - dnsmasq_addresses is defined

- name: assert | Test dnsmasq_ipsets
  ansible.builtin.assert:
    that:
      - dnsmasq_ipsets is iterable
    quiet: true
  when:
    - dnsmasq_ipsets is defined

- name: assert | Test item in dnsmasq_ipsets
  ansible.builtin.assert:
    that:
      - item.domains is defined
      - item.domains is iterable
      - item.destination is defined
      - item.destination is string
      - item.destination is not none
      - item.option is defined
      - item.option is string
      - item.option is not none
    quiet: true
  loop: "{{ dnsmasq_ipsets }}"
  when:
    - dnsmasq_ipsets is defined

- name: assert | Test dnsmasq_interfaces
  ansible.builtin.assert:
    that:
      - dnsmasq_interfaces is iterable
    quiet: true
  when:
    - dnsmasq_interfaces is defined

- name: assert | Test item in dnsmasq_interfaces
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
    quiet: true
  loop: "{{ dnsmasq_interfaces }}"
  when:
    - dnsmasq_interfaces is defined

- name: assert | Test dnsmasq_listen_addresses
  ansible.builtin.assert:
    that:
      - dnsmasq_listen_addresses is iterable
    quiet: true
  when:
    - dnsmasq_listen_addresses is defined
    - dnsmasq_listen_addresses is string

- name: assert | Test item in dnsmasq_listen_addresses
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
    quiet: true
  loop: "{{ dnsmasq_listen_addresses }}"
  when:
    - dnsmasq_listen_addresses is defined

- name: assert | Test dnsmasq_no_dhcp_interface
  ansible.builtin.assert:
    that:
      - dnsmasq_no_dhcp_interface is defined
      - dnsmasq_no_dhcp_interface is string
      - dnsmasq_no_dhcp_interface is not none
    quiet: true

- name: assert | Test dnsmasq_local_service
  ansible.builtin.assert:
    that:
      - dnsmasq_local_service is defined
      - dnsmasq_local_service is boolean
    quiet: true

- name: assert | Test dnsmasq_bind_interfaces
  ansible.builtin.assert:
    that:
      - dnsmasq_bind_interfaces is defined
      - dnsmasq_bind_interfaces is boolean
    quiet: true

- name: assert | Test dnsmasq_no_hosts
  ansible.builtin.assert:
    that:
      - dnsmasq_no_hosts is defined
      - dnsmasq_no_hosts is boolean
    quiet: true

- name: assert | Test dnsmasq_expand_hosts
  ansible.builtin.assert:
    that:
      - dnsmasq_expand_hosts is defined
      - dnsmasq_expand_hosts is boolean
    quiet: true

- name: assert | Test dnsmasq_domains
  ansible.builtin.assert:
    that:
      - dnsmasq_domains is iterable
    quiet: true
  when:
    - dnsmasq_domains is defined

- name: assert | Test item.name in dnsmasq_domains
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
    quiet: true
  loop: "{{ dnsmasq_domains }}"
  when:
    - dnsmasq_domains is defined

- name: assert | Test dnsmasq_dhcp_ranges
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_ranges is iterable
    quiet: true
  when:
    - dnsmasq_dhcp_ranges is defined

- name: assert | Test item.from in dnsmasq_dhcp_ranges
  ansible.builtin.assert:
    that:
      - item.from is defined
      - item.from is string
      - item.from is not none
    quiet: true
  when:
    - dnsmasq_dhcp_ranges is defined
  loop: "{{ dnsmasq_dhcp_ranges }}"

- name: assert | Test item.sets in dnsmasq_dhcp_ranges
  ansible.builtin.assert:
    that:
      - item.sets is iterabel
    quiet: true
  when:
    - dnsmasq_dhcp_ranges is defined
    - item.sets is defined
  loop: "{{ dnsmasq_dhcp_ranges }}"

- name: assert | Test item.tags in dnsmasq_dhcp_ranges
  ansible.builtin.assert:
    that:
      - item.tags is iterable
    quiet: true
  when:
    - dnsmasq_dhcp_ranges is defined
    - item.tags is defined
  loop: "{{ dnsmasq_dhcp_ranges }}"

- name: assert | Test item.options in dnsmasq_dhcp_ranges
  ansible.builtin.assert:
    that:
      - item.options is iterable
    quiet: true
  when:
    - dnsmasq_dhcp_ranges is defined
    - item.options is defined
  loop: "{{ dnsmasq_dhcp_ranges }}"

- name: assert | Test dnsmasq_enable_ra
  ansible.builtin.assert:
    that:
      - dnsmasq_enable_ra is defined
      - dnsmasq_enable_ra is boolean
    quiet: true

- name: assert | Test dnsmasq_hosts
  ansible.builtin.assert:
    that:
      - dnsmasq_hosts is iterable
    quiet: true
  when:
    - dnsmasq_hosts is defined

- name: assert | Test items in dnsmasq_hosts are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.value is defined
      - item.value is not none
    quiet: true
  loop: "{{ dnsmasq_hosts }}"
  when:
    - dnsmasq_hosts is defined

- name: assert | Test dnsmasq_read_ethers
  ansible.builtin.assert:
    that:
      - dnsmasq_read_ethers is defined
      - dnsmasq_read_ethers is boolean
    quiet: true

- name: assert | Test dnsmasq_dhcp_options
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_options is iterable
    quiet: true
  when:
    - dnsmasq_dhcp_options is defined

- name: assert | Test items in dnsmasq_dhcp_options are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.value is defined
      - item.value is not none
    quiet: true
  loop: "{{ dnsmasq_dhcp_options }}"
  when:
    - dnsmasq_dhcp_options is defined

- name: assert | Test dnsmasq_dhcp_option_force
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_option_force is iterable
    quiet: true
  when:
    - dnsmasq_dhcp_option_force is defined

- name: assert | Test items in dnsmasq_dhcp_option_force are set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.value is defined
      - item.value is not none
    quiet: true
  loop: "{{ dnsmasq_dhcp_option_force }}"
  when:
    - dnsmasq_dhcp_option_force is defined

- name: assert | Test dnsmasq_enable_tftp
  ansible.builtin.assert:
    that:
      - dnsmasq_enable_tftp is defined
      - dnsmasq_enable_tftp is boolean
    quiet: true

- name: assert | Test dnsmasq_tftp_no_fail
  ansible.builtin.assert:
    that:
      - dnsmasq_tftp_no_fail is defined
      - dnsmasq_tftp_no_fail is boolean
    quiet: true

- name: assert | Test dnsmasq_tftp_secure
  ansible.builtin.assert:
    that:
      - dnsmasq_tftp_secure is defined
      - dnsmasq_tftp_secure is boolean
    quiet: true

- name: assert | Test dnsmasq_tftp_no_blocksize
  ansible.builtin.assert:
    that:
      - dnsmasq_tftp_no_blocksize is defined
      - dnsmasq_tftp_no_blocksize is boolean
    quiet: true

- name: assert | Test dnsmasq_dhcp_lease_max
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_lease_max is number
      - dnsmasq_dhcp_lease_max >= 0
    quiet: true
  when:
    - dnsmasq_dhcp_lease_max is defined

- name: assert | Test dnsmasq_dhcp_authoritative
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_authoritative is defined
      - dnsmasq_dhcp_authoritative is boolean
    quiet: true

- name: assert | Test dnsmasq_dhcp_rapid_commit
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_rapid_commit is defined
      - dnsmasq_dhcp_rapid_commit is boolean
    quiet: true

- name: assert | Test dnsmasq_dhcp_script
  ansible.builtin.assert:
    that:
      - dnsmasq_dhcp_script is defined
      - dnsmasq_dhcp_script is string
      - dnsmasq_dhcp_script is not none
    quiet: true

- name: assert | Test dnsmasq_cache_size
  ansible.builtin.assert:
    that:
      - dnsmasq_cache_size is number
      - dnsmasq_cache_size >= 0
    quiet: true
  when:
    - dnsmasq_cache_size is defined

- name: assert | Test dnsmasq_no_negcache
  ansible.builtin.assert:
    that:
      - dnsmasq_no_negcache is defined
      - dnsmasq_no_negcache is boolean
    quiet: true

- name: assert | Test dnsmasq_local_ttl
  ansible.builtin.assert:
    that:
      - dnsmasq_local_ttl is number
      - dnsmasq_local_ttl >= 0
    quiet: true
  when:
    - dnsmasq_local_ttl is defined

- name: assert | Test dnsmasq_aliases
  ansible.builtin.assert:
    that:
      - dnsmasq_aliases is iterable
    quiet: true
  when:
    - dnsmasq_aliases is defined

- name: assert | Test items in dnsmasq_aliases are set correctly
  ansible.builtin.assert:
    that:
      - item.from is defined
      - item.from is string
      - item.from is not none
      - item.until is defined
      - item.until is string
      - item.until is not none
    quiet: true
  loop: "{{ dnsmasq_aliases }}"
  when:
    - dnsmasq_aliases is defined

- name: assert | Test dnsmasq_mx_hosts
  ansible.builtin.assert:
    that:
      - dnsmasq_mx_hosts is iterable
    quiet: true
  when:
    - dnsmasq_mx_hosts is defined

- name: assert | Test item.domain in dnsmasq_mx_hosts
  ansible.builtin.assert:
    that:
      - item.domain is defined
      - item.domain is string
      - item.domain is not none
    quiet: true
  loop: "{{ dnsmasq_mx_hosts }}"
  when:
    - dnsmasq_mx_hosts is defined

- name: assert | Test dnsmasq_localmx
  ansible.builtin.assert:
    that:
      - dnsmasq_localmx is defined
      - dnsmasq_localmx is boolean
    quiet: true

- name: assert | Test dnsmasq_selfmx
  ansible.builtin.assert:
    that:
      - dnsmasq_selfmx is defined
      - dnsmasq_selfmx is boolean
    quiet: true

- name: assert | Test dnsmasq_src_hosts
  ansible.builtin.assert:
    that:
      - dnsmasq_src_hosts is iterable
    quiet: true
  when:
    - dnsmasq_src_hosts is defined

- name: assert | Test items in dnsmasq_src_hosts are set correctly
  ansible.builtin.assert:
    that:
      - item.record is defined
      - item.record is string
      - item.record is not none
      - item.destination is defined
      - item.destination is string
      - item.destination is not none
      - item.port is defined
      - item.port is number
    quiet: true
  loop: "{{ dnsmasq_src_hosts }}"
  when:
    - dnsmasq_src_hosts is defined

- name: assert | Test item.priority in dnsmasq_src_hosts
  ansible.builtin.assert:
    that:
      - item.priority is number
      - item.priority >= 0
    quiet: true
  when:
    - dnsmasq_src_hosts is defined
    - item.priority is defined

- name: assert | Test dnsmasq_log_queries
  ansible.builtin.assert:
    that:
      - dnsmasq_log_queries is defined
      - dnsmasq_log_queries is boolean
    quiet: true

- name: assert | Test dnsmasq_log_dhcp
  ansible.builtin.assert:
    that:
      - dnsmasq_log_dhcp is defined
      - dnsmasq_log_dhcp is boolean
    quiet: true
