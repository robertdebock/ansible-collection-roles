---
# tasks file for arubascx

# Verify the input.
- name: Include assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

# Store a backup of the running config.
- name: Copy Running Config to local as JSON
  arubanetworks.aoscx.aoscx_backup_config:
    config_name: "{{ arubascx_backup_config_name }}"
    output_file: "{{ arubascx_backup_output_file }}"
  when:
    - arubascx_backup

# Configure the device.
- name: Apply all arubasx_lines.
  arubanetworks.aoscx.aoscx_config:
    lines: "{{ arubascx_lines }}"
  when:
    - arubascx_lines is defined

# TODO: Not sure if this is needed.
# - name: Retrieve all information from the device and save into a variable "facts_output"
#   arubanetworks.aoscx.aoscx_facts:
#   register: facts_output

# TODO: Figure out what [modules](https://github.com/aruba/aoscx-ansible-role/tree/master/docs) are needed.

# Setup [Banner](https://github.com/aruba/aoscx-ansible-role/blob/master/docs/aoscx_banner.md)
- name: Adding or Updating Banner
  arubanetworks.aoscx.aoscx_banner:
    banner_type: banner
    banner: "{{ arubascx_banner }}"
  when:
    - arubascx_banner is defined

# Setup [DNS](https://github.com/aruba/aoscx-ansible-role/blob/master/docs/aoscx_dns.md)
- name: DNS configuration creation
  arubanetworks.aoscx.aoscx_dns:
    mgmt_nameservers:
      "Primary": "{{ arubascx_dns.primary }}"
      "Secondary": "{{ arubascx_dns.secondary }}"
    dns_domain_name: "{{ arubascx_dns.dns_domain_name }}"
    dns_domain_list: "{{ arubascx_dns.dns_domain_list }}"
    dns_name_servers: "{{ arubascx_dns.dns_name_servers }}"
    dns_host_v4_address_mapping: "{{ arubascx_dns.dns_host_v4_address_mapping }}"
    vrf: "{{ arubascx_dns.vrf }}"
  when:
    - arubascx_dns is defined

# Setup [VLANs](https://github.com/aruba/aoscx-ansible-role/blob/master/docs/aoscx_vlan.md)
- name: Create VLAN 300 with description and name
  arubanetworks.aoscx.aoscx_vlan:
    vlan_id: "{{ item.vlan_id }}"
    name: "{{ item.name | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    state: "{{ item.state | default(omit) }}}}"
  loop: "{{ arubascx_vlans }}"
  loop_control:
    label: "{{ item.vlan_id }}"
  when:
    - arubascx_vlans is defined

# Setup [interfaces](https://github.com/aruba/aoscx-ansible-role/blob/master/docs/aoscx_interface.md)
- name: Configure Interface 1/1/2 - enable full duplex at 1000 Mbit/s
  arubanetworks.aoscx.aoscx_interface:
    name: "{{ item.name }}"
    duplex: "{{ item.duplex | default('full') }}"
    speeds: "{{ item.speeds | default(['1000']) }}"
    enabled: "{{ item.enabled | default(true) }}}}"
  loop: "{{ arubascx_interfaces }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - arubascx_interfaces is defined
