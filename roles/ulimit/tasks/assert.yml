---

- name: assert | Test ulimit_items
  ansible.builtin.assert:
    that:
      - ulimit_items is iterable
    quiet: yes
  when:
    - ulimit_items is defined

- name: assert | Test item in ulimit_items
  ansible.builtin.assert:
    that:
      - item.limit_item is defined
      - item.limit_item is string
      - item.limit_item in ulimit_acceptable_limit_items
      - item.value is defined
      - item.value is number
    quiet: yes
  loop: "{{ ulimit_items }}"
  loop_control:
    label: "{{ item.limit_item }}"
  when:
    - ulimit_items is defined
  vars:
    ulimit_acceptable_limit_items:
      - core
      - data
      - fsize
      - memlock
      - nofile
      - rss
      - stack
      - cpu
      - nproc
      - as
      - maxlogins
      - maxsyslogins
      - priority
      - locks
      - sigpending
      - msgqueue
      - nice
      - rtprio
      - chroot

- name: assert | Test ulimit_domain
  ansible.builtin.assert:
    that:
      - ulimit_domain is defined
      - ulimit_domain is string
      - ulimit_domain is not none
    quiet: yes

- name: assert | Test ulimit_limit_type
  ansible.builtin.assert:
    that:
      - ulimit_limit_type is defined
      - ulimit_limit_type is string
      - ulimit_limit_type in [ "hard", "soft", "-" ]
    quiet: yes

- name: assert | Test ulimit_dest
  ansible.builtin.assert:
    that:
      - ulimit_dest is defined
      - ulimit_dest is string
      - ulimit_dest is not none
    quiet: yes

- name: assert | Test ulimit_backup
  ansible.builtin.assert:
    that:
      - ulimit_backup is defined
      - ulimit_backup is boolean
    quiet: yes
