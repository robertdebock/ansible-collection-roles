---
- name: assert | Test httpd_servername
  ansible.builtin.assert:
    that:
      - httpd_servername is defined
      - httpd_servername is string
      - httpd_servername is not none
    quiet: true

- name: assert | Test httpd_port
  ansible.builtin.assert:
    that:
      - httpd_port is defined
      - httpd_port is number
      - httpd_port > 0
      - httpd_port < 65536
    quiet: true

- name: assert | Test https_ssl_enable
  ansible.builtin.assert:
    that:
      - https_ssl_enable is defined
      - https_ssl_enable is boolean
    quiet: true

- name: assert | Test httpd_ssl_servername
  ansible.builtin.assert:
    that:
      - httpd_ssl_servername is defined
      - httpd_ssl_servername is string
      - httpd_ssl_servername is not none
    quiet: true

- name: assert | Test httpd_ssl_port
  ansible.builtin.assert:
    that:
      - httpd_ssl_port is defined
      - httpd_ssl_port is number
      - httpd_ssl_port > 0
      - httpd_ssl_port < 65535
      - httpd_ssl_port != httpd_port
    quiet: true

- name: assert | Test httpd_locations
  ansible.builtin.assert:
    that:
      - httpd_locations is iterable
    quiet: true
  when:
    - httpd_locations is defined

- name: assert | Test item in httpd_locations
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.location is defined
      - item.location is string
      - item.location is not none
      - item.backend_url is defined
      - item.backend_url is string
      - item.backend_url is not none
    quiet: true
  loop: "{{ httpd_locations }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_locations is defined

- name: assert | Test httpd_vhosts
  ansible.builtin.assert:
    that:
      - httpd_vhosts is iterable
    quiet: true
  when:
    - httpd_vhosts is defined

- name: assert | Test item in httpd_vhosts
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.servername is defined
      - item.servername is string
    quiet: true
  loop: "{{ httpd_vhosts }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_vhosts is defined

- name: assert | Test item.create_docroot in httpd_vhosts
  ansible.builtin.assert:
    that:
      - item.create_docroot is boolean
    quiet: true
  loop: "{{ httpd_vhosts }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_vhosts is defined
    - item.create_docroot is defined

- name: assert | Test item.serveralias in httpd_vhosts
  ansible.builtin.assert:
    that:
      - item.serveralias is iterable
    quiet: true
  loop: "{{ httpd_vhosts }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_vhosts is defined
    - item.serveralias is defined

- name: assert | Test httpd_directories
  ansible.builtin.assert:
    that:
      - httpd_directories is iterable
    quiet: true
  when:
    - httpd_directories is defined

- name: assert | Test item.name in httpd_directories
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is not none
      - item.path is defined
      - item.path is string
      - item.path is not none
      - item.option is defined or item.allow_override is defined
    quiet: true
  loop: "{{ httpd_directories }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_directories is defined

- name: assert | Test item.options in httpd_directories
  ansible.builtin.assert:
    that:
      - item.options is iterable
    quiet: true
  loop: "{{ httpd_directories }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_directories is defined
    - item.options is defined

- name: assert | Test item.allow_override in httpd_directories
  ansible.builtin.assert:
    that:
      - item.allow_override is string
      - item.allow_override is not none
    quiet: true
  loop: "{{ httpd_directories }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - httpd_directories is defined
    - item.allow_override is defined

- name: assert | Test httpd_remove_example
  ansible.builtin.assert:
    that:
      - httpd_remove_example is defined
      - httpd_remove_example is boolean
    quiet: true

- name: assert | Test httpd_additionnal_modules
  ansible.builtin.assert:
    that:
      - httpd_additionnal_modules is defined
      - httpd_additionnal_modules | type_debug == "list"
    quiet: true

- name: assert | Test if httpd_modules_to_activate_with_command is set correctly
  ansible.builtin.assert:
    that:
      - httpd_modules_to_activate_with_command is defined
      - httpd_modules_to_activate_with_command | type_debug == "list"
    quiet: true

- name: assert | Test if default_vhost_conf is set correctly
  ansible.builtin.assert:
    that:
      - default_vhost_conf is defined
      - default_vhost_conf is string
    quiet: true
