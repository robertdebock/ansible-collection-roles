---
# tasks file for glusterfs

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Install glusterfs requirements
  ansible.builtin.package:
    name: "{{ glusterfs_requirements }}"
    state: present

- name: Configure brick
  when:
    - glusterfs_bricks is defined
  block:
    - name: Create filesystem
      community.general.filesystem:
        fstype: xfs
        dev: "{{ item.device }}"
      loop: "{{ glusterfs_bricks }}"

    - name: Create brick mountpoint
      ansible.builtin.file:
        path: "{{ item.mountpoint }}"
        state: directory
        mode: "0755"
      loop: "{{ glusterfs_bricks }}"

    - name: Mount filesystem
      ansible.posix.mount:
        path: "{{ item.mountpoint }}"
        src: "{{ item.device }}"
        fstype: xfs
        state: mounted
      loop: "{{ glusterfs_bricks }}"

- name: Create directory
  ansible.builtin.file:
    path: "{{ item.bricks }}"
    state: directory
    mode: "0755"
  loop: "{{ glusterfs_volumes }}"
  when:
    - glusterfs_volumes is defined

- name: Install gluster
  ansible.builtin.package:
    name: "{{ glusterfs_packages }}"
    state: present

- name: Configure selinux
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
  block:
    - name: Set selinux boolean nis_enabled to yes
      ansible.posix.seboolean:
        name: nis_enabled
        state: yes
        persistent: yes

    - name: Place selinux type enforcement
      ansible.builtin.copy:
        src: "{{ item }}.te"
        dest: "/etc/glusterfs/{{ item }}.te"
        mode: "0640"
      loop: "{{ glusterfs_selinux_local_policies }}"
      notify:
        - Create selinux mod for glusterfs
        - Create selinux pp for glusterfs
        - Load selinux pp for glusterfs

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Start glusterd
  ansible.builtin.service:
    name: glusterd
    state: started
    enabled: yes

- name: Peer with other nodes
  ansible.builtin.command:
    cmd: "gluster peer probe {{ hostvars[item]['ansible_default_ipv4']['address'] }}"
  loop: "{{ groups.all }}"
  run_once: yes
  register: glusterfs_peer_with_other_nodes
  changed_when:
    - "'already in peer list' not in glusterfs_peer_with_other_nodes.stdout"
  when:
    - item != inventory_hostname

- name: Configure volume
  when:
    - glusterfs_volumes is defined
  block:
    - name: Create volume
      gluster.gluster.gluster_volume:
        name: "{{ item.name }}"
        state: present
        bricks: "{{ item.bricks }}"
        rebalance: "{{ item.rebalance | default('yes') }}"
        cluster: "{{ groups.all | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | join(',') }}"
        replicas: "{{ item.replicas | default(groups.all | length) }}"
      run_once: yes
      loop: "{{ glusterfs_volumes }}"

    - name: Create volume mountpoint
      ansible.builtin.file:
        path: "{{ item.mountpoint }}"
        state: directory
        mode: "0755"
      loop: "{{ glusterfs_volumes }}"

    - name: Mount gluster volume
      ansible.posix.mount:
        path: "{{ item.mountpoint }}"
        src: "{{ ansible_fqdn }}:{{ item.name }}"
        fstype: glusterfs
        state: mounted
      loop: "{{ glusterfs_volumes }}"
