---

- name: assert_instances | Test if authentication is set correctly
  ansible.builtin.assert:
    that:
      - instance.authentication is defined
      - instance.authentication | length > 0
      - instance.authentication is iterable
    quiet: yes

- name: assert_instances | Test if item in instance.authentication is set correctly
  ansible.builtin.assert:
    that:
      - instance.authentication.auth_type is defined
      - instance.authentication.auth_type | length > 0
      - instance.authentication.auth_type in [ "AH", "PASS", "PASS|AH" ]
      - instance.authentication.auth_pass is defined
      - instance.authentication.auth_pass | length > 0
      - instance.authentication.auth_pass | length <= 20
    quiet: yes

- name: assert_instances | Test if item in instance.virtual_ipaddresses is set correctly
  ansible.builtin.assert:
    that:
      - item | length > 0
      - item | length <= 20
      - item.name is defined
      - item.name | length > 0
      - item.cidr is defined
      - item.cidr is number
      - item.cidr | int >= 0
      - item.cidr | int <= 32
    quiet: yes
  loop: "{{ instance.virtual_ipaddresses }}"
  loop_control:
    label: "{{ item.name }}"

- name: assert_instances | Test if item in instance.unicast_src_ip is set correctly
  ansible.builtin.assert:
    that:
      - item.unicast_src_ip is string
      - item.unicast_src_ip | length >= 8
      - item.unicast_src_ip | length <= 16
      - item.secondary_private_ip is defined
      - item.secondary_private_ip is string
      - item.secondary_private_ip | length >= 8
      - item.secondary_private_ip | length <= 16
    quiet: yes
  when:
    - item.unicast_src_ip is defined

- name: assert_instances | Test if item in instance.check_status_command is set correctly
  ansible.builtin.assert:
    that:
      - item.check_status_command is string
      - item.priority <= 252
    quiet: yes
  when:
    - item.check_status_command is defined
