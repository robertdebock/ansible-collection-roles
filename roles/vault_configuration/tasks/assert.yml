---

- name: assert | Test vault_configuration_owner
  ansible.builtin.assert:
    that:
      - vault_configuration_owner is defined
      - vault_configuration_owner is string
      - vault_configuration_owner is not none
    quiet: yes

- name: assert | Test vault_configuration_group
  ansible.builtin.assert:
    that:
      - vault_configuration_group is defined
      - vault_configuration_group is string
      - vault_configuration_group is not none
    quiet: yes

- name: assert | Test vault_configuration_license
  ansible.builtin.assert:
    that:
      - vault_configuration_license is string
      - vault_configuration_license is not none
    quiet: yes
  when:
    - vault_configuration_license is defined

- name: assert | Test vault_configuration_environment
  ansible.builtin.assert:
    that:
      - vault_configuration_environment is iterable
    quiet: yes
  when:
    - vault_configuration_environment is defined

- name: assert | Test vault_configuration_tls_directory
  ansible.builtin.assert:
    that:
      - vault_configuration_tls_directory is defined
      - vault_configuration_tls_directory is string
      - vault_configuration_tls_directory is not none
    quiet: yes

- name: assert | Test vault_configuration_max_lease_ttl
  ansible.builtin.assert:
    that:
      - vault_configuration_max_lease_ttl is defined
      - vault_configuration_max_lease_ttl is string
      - vault_configuration_max_lease_ttl is not none
    quiet: yes

- name: assert | Test vault_configuration_default_lease_ttl
  ansible.builtin.assert:
    that:
      - vault_configuration_default_lease_ttl is defined
      - vault_configuration_default_lease_ttl is string
      - vault_configuration_default_lease_ttl is not none
    quiet: yes

- name: assert | Test vault_configuration_api_addr
  ansible.builtin.assert:
    that:
      - vault_configuration_api_addr is defined
      - vault_configuration_api_addr is string
      - vault_configuration_api_addr is not none
    quiet: yes

- name: assert | Test vault_configuration_cluster_addr
  ansible.builtin.assert:
    that:
      - vault_configuration_cluster_addr is defined
      - vault_configuration_cluster_addr is string
      - vault_configuration_cluster_addr is not none
    quiet: yes
  when:
    - not vault_configuration_disable_clustering

- name: assert | Test vault_configuration_disable_cache
  ansible.builtin.assert:
    that:
      - vault_configuration_disable_cache is defined
      - vault_configuration_disable_cache is boolean
    quiet: yes

- name: assert | Test vault_configuration_disable_mlock
  ansible.builtin.assert:
    that:
      - vault_configuration_disable_mlock is defined
      - vault_configuration_disable_mlock is boolean
    quiet: yes

- name: assert | Test vault_configuration_disable_clustering
  ansible.builtin.assert:
    that:
      - vault_configuration_disable_clustering is defined
      - vault_configuration_disable_clustering is boolean
    quiet: yes

- name: assert | Test vault_configuration_plugin_directory
  ansible.builtin.assert:
    that:
      - vault_configuration_plugin_directory is defined
      - vault_configuration_plugin_directory is string
      - vault_configuration_plugin_directory is not none
    quiet: yes

- name: assert | Test vault_configuration_ui
  ansible.builtin.assert:
    that:
      - vault_configuration_ui is defined
      - vault_configuration_ui is boolean
    quiet: yes

- name: assert | Test vault_configuration_log_level
  ansible.builtin.assert:
    that:
      - vault_configuration_log_level is string
      - vault_configuration_log_level in [ "trace", "debug", "error", "warn", "info" ]
    quiet: yes
  when:
    - vault_configuration_log_level is defined
    - vault_configuration_log_level | length > 0

- name: assert | Test vault_configuration_listeners
  ansible.builtin.assert:
    that:
      - vault_configuration_listeners is defined
      - vault_configuration_listeners is iterable
    quiet: yes

- name: assert | Test vault_configuration_listeners.type
  ansible.builtin.assert:
    that:
      - item.type is defined
      - item.type is string
      - item.type in [ "tcp", "unix" ]
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"

- name: assert | Test vault_configuration_listeners.address
  ansible.builtin.assert:
    that:
      - item.address is defined
      - item.address is string
      - item.address is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"

- name: assert | Test vault_configuration_listeners.cluster_address
  ansible.builtin.assert:
    that:
      - item.cluster_address is defined
      - item.cluster_address is string
      - item.cluster_address is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - not vault_configuration_disable_clustering
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.http_idle_timeout
  ansible.builtin.assert:
    that:
      - item.http_idle_timeout is string
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.http_idle_timeout is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.http_read_header_timeout
  ansible.builtin.assert:
    that:
      - item.http_read_header_timeout is string
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - vault_configuration_listener.http_read_header_timeout is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.http_read_timeout
  ansible.builtin.assert:
    that:
      - item.http_read_timeout is defined
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.http_read_timeout is string
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.http_write_timeout
  ansible.builtin.assert:
    that:
      - item.http_write_timeout is not none
      - item.http_write_timeout is string or
        item.http_write_timeout is number
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.http_write_timeout is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.max_request_size
  ansible.builtin.assert:
    that:
      - item.max_request_size is number
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.max_request_size is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.max_request_duration
  ansible.builtin.assert:
    that:
      - item.max_request_duration is string
      - item.max_request_duration is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.max_request_duration is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.proxy_protocol_behavior
  ansible.builtin.assert:
    that:
      - item.proxy_protocol_behavior is string
      - item.proxy_protocol_behavior in [ "use_always", "allow_authorized", "deny_unauthorized" ]
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.proxy_protocol_behavior is defined
    - item.proxy_protocol_behavior | length > 0
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.proxy_protocol_authorized_addrs
  ansible.builtin.assert:
    that:
      - item.proxy_protocol_authorized_addrs is string
      - item.proxy_protocol_authorized_addrs is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.proxy_protocol_authorized_addrs is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_disable
  ansible.builtin.assert:
    that:
      - item.tls_disable is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_disable is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_cert_file
  ansible.builtin.assert:
    that:
      - item.tls_cert_file is string
      - item.tls_cert_file is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_cert_file is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_cert
  ansible.builtin.assert:
    that:
      - item.tls_cert is string
      - item.tls_cert is not none
      - item.tls_cert_file is not defined
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_cert is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_key_file
  ansible.builtin.assert:
    that:
      - item.tls_key_file is string
      - item.tls_key_file is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_key_file is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_key
  ansible.builtin.assert:
    that:
      - item.tls_key is string
      - item.tls_key is not none
      - item.tls_key_file is not defined
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_key is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_min_version
  ansible.builtin.assert:
    that:
      - item.tls_min_version is string
      - item.tls_min_version in [ "tls10", "tls11", "tls12", "tls13" ]
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_min_version is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_cipher_suites
  ansible.builtin.assert:
    that:
      - item.tls_cipher_suites is string
      - item.tls_cipher_suites is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_cipher_suites is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_require_and_verify_client_cert
  ansible.builtin.assert:
    that:
      - item.tls_require_and_verify_client_cert is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_require_and_verify_client_cert is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_client_ca_file
  ansible.builtin.assert:
    that:
      - item.tls_client_ca_file is string
      - item.tls_client_ca_file is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_client_ca_file is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.tls_disable_client_certs
  ansible.builtin.assert:
    that:
      - item.tls_disable_client_certs is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.tls_disable_client_certs is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.x_forwarded_for_authorized_addrs
  ansible.builtin.assert:
    that:
      - item.x_forwarded_for_authorized_addrs is string
      - item.x_forwarded_for_authorized_addrs is not none
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.x_forwarded_for_authorized_addrs is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.x_forwarded_for_hop_skips
  ansible.builtin.assert:
    that:
      - item.x_forwarded_for_hop_skips is number
      - item.x_forwarded_for_hop_skips >= 0
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.x_forwarded_for_hop_skips is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.x_forwarded_for_reject_not_authorized
  ansible.builtin.assert:
    that:
      - item.x_forwarded_for_reject_not_authorized is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.x_forwarded_for_reject_not_authorized is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.x_forwarded_for_reject_not_present
  ansible.builtin.assert:
    that:
      - item.x_forwarded_for_reject_not_present is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.x_forwarded_for_reject_not_present is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.telemetry
  ansible.builtin.assert:
    that:
      - item.telemetry is mapping
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.telemetry is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.telemetry.unauthenticated_metrics_access
  ansible.builtin.assert:
    that:
      - item.telemetry.unauthenticated_metrics_access is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.telemetry.unauthenticated_metrics_access is defined
    - item.telemetry is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.profiling
  ansible.builtin.assert:
    that:
      - item.profiling is mapping
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.profiling is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.profiling.unauthenticated_pprof_access
  ansible.builtin.assert:
    that:
      - item.profiling.unauthenticated_pprof_access is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.profiling is defined
    - item.profiling.unauthenticated_pprof_access is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.profiling.unauthenticated_in_flight_request_access
  ansible.builtin.assert:
    that:
      - item.profiling.unauthenticated_in_flight_request_access is boolean
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.profiling is defined
    - item.profiling.unauthenticated_in_flight_request_access is defined
    - item.type == "tcp"

- name: assert | Test vault_configuration_listeners.socket_mode
  ansible.builtin.assert:
    that:
      - item.socket_mode is string
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.socket_mode is defined
    - item.type == "unix"

- name: assert | Test vault_configuration_listeners.socket_user
  ansible.builtin.assert:
    that:
      - item.socket_user is string
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.socket_user is defined
    - item.type == "unix"

- name: assert | Test vault_configuration_listeners.socket_group
  ansible.builtin.assert:
    that:
      - item.socket_group is string
    quiet: yes
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address }}"
  when:
    - item.socket_group is defined
    - item.type == "unix"

- name: assert | Test vault_configuration_storage_raft
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft is mapping
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined

- name: assert | Test vault_configuration_storage_raft.path
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.path is string
      - vault_configuration_storage_raft.path is not none
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined

- name: assert | Test vault_configuration_storage_raft.node_id
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.node_id is string
      - vault_configuration_storage_raft.node_id is not none
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined

- name: assert | Test vault_configuration_storage_raft.performance_multiplier
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.performance_multiplier is number
      - vault_configuration_storage_raft.performance_multiplier >= 0
    quiet: yes
  when:
    - vault_configuration_storage_raft.performance_multiplier is defined
    - vault_configuration_storage_raft is defined

- name: assert | Test vault_configuration_storage_raft.trailing_logs
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.trailing_logs is number
      - vault_configuration_storage_raft.trailing_logs >= 0
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.trailing_logs is defined

- name: assert | Test vault_configuration_storage_raft.snapshot_threshold
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.snapshot_threshold is number
      - vault_configuration_storage_raft.snapshot_threshold >= 0
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.snapshot_threshold is defined

- name: assert | Test vault_configuration_storage_raft.retry_join
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.retry_join is iterable
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined

- name: assert | Test item.leader_api_addr
  ansible.builtin.assert:
    that:
      - item.leader_api_addr is string
      - item.leader_api_addr is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_api_addr }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_api_addr is defined

- name: assert | Test item.auto_join
  ansible.builtin.assert:
    that:
      - item.auto_join is string
      - item.auto_join is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.auto_join | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.auto_join is defined

- name: assert | Test item.auto_join_scheme
  ansible.builtin.assert:
    that:
      - item.auto_join_scheme is string
      - item.auto_join_scheme in [ "http", "https" ]
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.auto_join_scheme | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.auto_join_scheme is defined

- name: assert | Test vault_configuration_storage_raft.retry_join.auto_join_port
  ansible.builtin.assert:
    that:
      - item.auto_join_port is number
      - item.auto_join_port >= 0
      - item.auto_join_port <= 64536
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.auto_join_port | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.auto_join_port is defined

- name: assert | Test item.leader_tls_servername
  ansible.builtin.assert:
    that:
      - item.leader_tls_servername is string
      - item.leader_tls_servername is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_tls_servername | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_tls_servername is defined

- name: assert | Test item.leader_ca_cert_file
  ansible.builtin.assert:
    that:
      - item.leader_ca_cert_file is string
      - item.leader_ca_cert_file is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_ca_cert_file | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_ca_cert_file is defined

- name: assert | Test item.leader_ca_cert
  ansible.builtin.assert:
    that:
      - item.leader_ca_cert is string
      - item.leader_ca_cert is not none
      - item.leder_ca_cert_file is not defined
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_ca_cert_file | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_ca_cert is defined


- name: assert | Test item.leader_client_cert_file
  ansible.builtin.assert:
    that:
      - item.leader_client_cert_file is string
      - item.leader_client_cert_file is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_client_cert_file | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_client_cert_file is defined

- name: assert | Test item.leader_client_key_file
  ansible.builtin.assert:
    that:
      - item.leader_client_key_file is string
      - item.leader_client_key_file is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_client_key_file | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_client_key_file is defined

- name: assert | Test item.leader_ca_cert
  ansible.builtin.assert:
    that:
      - item.leader_ca_cert is string
      - item.leader_ca_cert is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "{{ item.leader_ca_cert | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_ca_cert is defined

- name: assert | Test item.leader_client_cert
  ansible.builtin.assert:
    that:
      - item.leader_client_cert is string
      - item.leader_client_cert is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.leader_client_cert }}"
  loop_control:
    label: "{{ item.leader_client_cert | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_client_cert is defined

- name: assert | Test item.leader_client_key
  ansible.builtin.assert:
    that:
      - item.leader_client_key is string
      - item.leader_client_key is not none
    quiet: yes
  loop: "{{ vault_configuration_storage_raft.leader_client_cert }}"
  loop_control:
    label: "{{ item.leader_client_key | default('Not set') }}"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_client_key is defined

- name: assert | Test vault_configuration_storage_raft.retry_join_as_non_voter
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.retry_join_as_non_voter is boolean
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join_as_non_voter is defined

- name: assert | Test vault_configuration_storage_raft.max_entry_size
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.max_entry_size is number
      - vault_configuration_storage_raft.max_entry_size >= 0
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.max_entry_size is defined

- name: assert | Test vault_configuration_storage_raft.autopilot_reconcile_interval
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.autopilot_reconcile_interval is string
      - vault_configuration_storage_raft.autopilot_reconcile_interval is not none
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.autopilot_reconcile_interval is defined

- name: assert | Test vault_configuration_storage_raft.autopilot_update_interval
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.autopilot_update_interval is string
      - vault_configuration_storage_raft.autopilot_update_interval is not none
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.autopilot_update_interval is defined

- name: assert | Test vault_configuration_storage_raft.autopilot_upgrade_version
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.autopilot_upgrade_version is string
      - vault_configuration_storage_raft.autopilot_upgrade_version is not none
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.autopilot_upgrade_version is defined

- name: assert | Test vault_configuration_storage_raft.autopilot_redundancy_zone
  ansible.builtin.assert:
    that:
      - vault_configuration_storage_raft.autopilot_redundancy_zone is string
      - vault_configuration_storage_raft.autopilot_redundancy_zone is not none
    quiet: yes
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.autopilot_redundancy_zone is defined

- name: assert | Test vault_configuration_seal_awskms
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms is mapping
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined

- name: assert | Test vault_configuration_seal_awskms.region
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.region is string
      - vault_configuration_seal_awskms.region is not none
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.region is defined

- name: assert | Test vault_configuration_seal_awskms.access_key
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.access_key is string
      - vault_configuration_seal_awskms.access_key is not none
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.access_key is defined

- name: assert | Test vault_configuration_seal_awskms.session_token
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.session_token is string
      - vault_configuration_seal_awskms.session_token is not none
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.regsession_tokenion is defined

- name: assert | Test vault_configuration_seal_awskms.secret_key
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.secret_key is string
      - vault_configuration_seal_awskms.secret_key is not none
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.secret_key is defined

- name: assert | Test vault_configuration_seal_awskms.kms_key_id
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.kms_key_id is string
      - vault_configuration_seal_awskms.kms_key_id is not none
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.kms_key_id is defined

- name: assert | Test vault_configuration_seal_awskms.disabled
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.disabled is boolean
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.disabled is defined

- name: assert | Test vault_configuration_seal_awskms.endpoint
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_awskms.endpoint is string
      - vault_configuration_seal_awskms.endpoint is not none
    quiet: yes
  when:
    - vault_configuration_seal_awskms is defined
    - vault_configuration_seal_awskms.endpoint is defined

- name: assert | Test vault_configuration_seal_azurekeyvault
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault is mapping
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.tenant_id
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.tenant_id is string
      - vault_configuration_seal_azurekeyvault.tenant_id is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.tenant_id is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.client_id
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.client_id is string
      - vault_configuration_seal_azurekeyvault.client_id is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.client_id is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.client_secret
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.client_secret is string
      - vault_configuration_seal_azurekeyvault.client_secret is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.client_secret is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.environment
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.environment is string
      - vault_configuration_seal_azurekeyvault.environment is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.environment is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.vault_name
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.vault_name is string
      - vault_configuration_seal_azurekeyvault.vault_name is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.vault_name is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.key_name
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.key_name is string
      - vault_configuration_seal_azurekeyvault.key_name is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.key_name is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.resource
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.resource is string
      - vault_configuration_seal_azurekeyvault.resource is not none
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.resource is defined

- name: assert | Test vault_configuration_seal_azurekeyvault.disabled
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_azurekeyvault.disabled is boolean
    quiet: yes
  when:
    - vault_configuration_seal_azurekeyvault is defined
    - vault_configuration_seal_azurekeyvault.disabled is defined

- name: assert | Test vault_configuration_seal_pkcs11
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11 is mapping
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined

- name: assert | Test vault_configuration_seal_pkcs11.lib
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.lib is defined
      - vault_configuration_seal_pkcs11.lib is string
      - vault_configuration_seal_pkcs11.lib is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined

- name: assert | Test vault_configuration_seal_pkcs11.slot
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.slot is string
      - vault_configuration_seal_pkcs11.slot is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.slot is defined

- name: assert | Test vault_configuration_seal_pkcs11.token_label
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.token_label is string
      - vault_configuration_seal_pkcs11.token_label is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.token_label is defined

- name: assert | Test vault_configuration_seal_pkcs11.slot or token_label
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.slot is defined or vault_configuration_seal_pkcs11.token_label is defined
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined

- name: assert | Test vault_configuration_seal_pkcs11.pin
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.pin is defined
      - vault_configuration_seal_pkcs11.pin is string
      - vault_configuration_seal_pkcs11.pin is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined

- name: assert | Test vault_configuration_seal_pkcs11.key_label
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.key_label is defined
      - vault_configuration_seal_pkcs11.key_label is string
      - vault_configuration_seal_pkcs11.key_label is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined

- name: assert | Test vault_configuration_seal_pkcs11.default_key_label
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.default_key_label is string
      - vault_configuration_seal_pkcs11.default_key_label is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.default_key_label is defined

- name: assert | Test vault_configuration_seal_pkcs11.key_id
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.key_id is string
      - vault_configuration_seal_pkcs11.key_id is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.key_id is defined

- name: assert | Test vault_configuration_seal_pkcs11.hmac_key_label
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.hmac_key_label is defined
      - vault_configuration_seal_pkcs11.hmac_key_label is string
      - vault_configuration_seal_pkcs11.hmac_key_label is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined

- name: assert | Test vault_configuration_seal_pkcs11.default_hmac_key_label
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.default_hmac_key_label is string
      - vault_configuration_seal_pkcs11.default_hmac_key_label is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.default_hmac_key_label is defined

- name: assert | Test vault_configuration_seal_pkcs11.hmac_key_id
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.hmac_key_id is string
      - vault_configuration_seal_pkcs11.hmac_key_id is not none
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.hmac_key_id is defined

- name: assert | Test vault_configuration_seal_pkcs11.mechanism
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.mechanism is string
      - vault_configuration_seal_pkcs11.mechanism is not none
      - vault_configuration_seal_pkcs11.mechamism in [ "0x1085", "0x1082", "0x1087", "0x0009", "0x0001" ]
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.mechanism is defined

- name: assert | Test vault_configuration_seal_pkcs11.hmac_mechanism
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.hmac_mechanism is string
      - vault_configuration_seal_pkcs11.hmac_mechanism is not none
      - vault_configuration_seal_pkcs11.hmac_mechanism == "0x0251"
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.hmac_mechanism is defined

- name: assert | Test vault_configuration_seal_pkcs11.generate_key
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.generate_key is boolean
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.generate_key is defined

- name: assert | Test vault_configuration_seal_pkcs11.force_rw_session
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.force_rw_session is boolean
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.force_rw_session is defined

- name: assert | Test vault_configuration_seal_pkcs11.disabled
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_pkcs11.disabled is boolean
    quiet: yes
  when:
    - vault_configuration_seal_pkcs11 is defined
    - vault_configuration_seal_pkcs11.disabled is defined

- name: assert | Test vault_configuration_seal_ocikms
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_ocikms is mapping
    quiet: yes
  when:
    - vault_configuration_seal_ocikms is defined

- name: assert | Test vault_configuration_seal_ocikms.key_id
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_ocikms.key_id is string
      - vault_configuration_seal_ocikms.key_id is not none
    quiet: yes
  when:
    - vault_configuration_seal_ocikms is defined
    - vault_configuration_seal_ocikms.key_id is defined

- name: assert | Test vault_configuration_seal_ocikms.crypto_endpoint
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_ocikms.crypto_endpoint is string
      - vault_configuration_seal_ocikms.crypto_endpoint is not none
    quiet: yes
  when:
    - vault_configuration_seal_ocikms is defined
    - vault_configuration_seal_ocikms.crypto_endpoint is defined

- name: assert | Test vault_configuration_seal_ocikms.management_endpoint
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_ocikms.management_endpoint is string
      - vault_configuration_seal_ocikms.management_endpoint is not none
    quiet: yes
  when:
    - vault_configuration_seal_ocikms is defined
    - vault_configuration_seal_ocikms.management_endpoint is defined

- name: assert | Test vault_configuration_seal_ocikms.auth_type_api_key
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_ocikms.auth_type_api_key is boolean
    quiet: yes
  when:
    - vault_configuration_seal_ocikms is defined
    - vault_configuration_seal_ocikms.auth_type_api_key is defined

- name: assert | Test vault_configuration_seal_ocikms.disabled
  ansible.builtin.assert:
    that:
      - vault_configuration_seal_ocikms.disabled is boolean
    quiet: yes
  when:
    - vault_configuration_seal_ocikms is defined
    - vault_configuration_seal_ocikms.disabled is defined
