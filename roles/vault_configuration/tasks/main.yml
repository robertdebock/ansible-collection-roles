---
# tasks file for vault_configuration

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Create Vault Raft storage path
  ansible.builtin.file:
    path: "{{ vault_configuration_storage_raft.path }}"
    state: directory
    mode: "0750"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  when:
    - vault_configuration_storage_raft is defined

- name: Place TLS CA certificate
  ansible.builtin.copy:
    src: "{{ item.leader_ca_cert_file | default(omit) }}"
    content: "{{ item.leader_ca_cert | default(omit) }}"
    dest: "{{ vault_configuration_tls_directory }}/ca.crt"
    mode: "0600"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  notify:
    - Reload Vault
  loop: "{{ vault_configuration_storage_raft.retry_join }}"
  loop_control:
    label: "A CA certificate"
  when:
    - vault_configuration_storage_raft is defined
    - vault_configuration_storage_raft.retry_join is defined
    - item.leader_ca_cert is defined or
      item.leader_ca_cert_file is defined

- name: Place TLS key
  ansible.builtin.copy:
    src: "{{ item.tls_key_file | default(omit) }}"
    content: "{{ item.tls_key | default(omit) }}"
    dest: "{{ vault_configuration_tls_directory }}/tls.key"
    mode: "0600"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "A hidden TLS key"
  when:
    - vault_configuration_listeners is defined
    - item.tls_key is defined or
      item.tls_key_file is defined
  notify:
    - Reload Vault

- name: Place TLS certificate
  ansible.builtin.copy:
    src: "{{ item.tls_cert_file | default(omit) }}"
    content: "{{ item.tls_cert | default(omit) }}"
    dest: "{{ vault_configuration_tls_directory }}/tls.crt"
    mode: "0600"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "A long TLS certificate"
  notify:
    - Reload Vault
  when:
    - vault_configuration_listeners is defined
    - item.tls_cert is defined or
      item.tls_cert_file is defined

- name: Place Vault license
  ansible.builtin.copy:
    dest: "/etc/vault.d/license.hclic"
    content: "{{ vault_configuration_license }}"
    mode: "0640"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  notify:
    - Reload Vault
  when:
    - vault_configuration_license is defined

- name: Create socket directory
  ansible.builtin.file:
    path: "{{ item.address | dirname }}"
    state: directory
    mode: "0755"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  loop: "{{ vault_configuration_listeners }}"
  loop_control:
    label: "{{ item.address | dirname }}"
  when:
    - item.type == "unix"

- name: Place Vault configuration
  ansible.builtin.template:
    src: vault.hcl.j2
    dest: /etc/vault.d/vault.hcl
    mode: "0640"
    owner: "{{ vault_configuration_owner }}"
    group: "{{ vault_configuration_group }}"
  notify:
    - Restart Vault
