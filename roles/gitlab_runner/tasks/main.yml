---
# tasks file for gitlab_runner

- name: Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Install requirements
  ansible.builtin.package:
    name: "{{ gitlab_runner_requirements }}"
    state: present

- name: Get repository installation script
  ansible.builtin.get_url:
    url: "{{ gitlab_runner_script_url }}"
    dest: /tmp/gitlab-runner-script.sh
    mode: "750"

- name: Run repository installation script
  ansible.builtin.command:
    cmd: /tmp/gitlab-runner-script.sh
    creates: "{{ gitlab_runner_repository_file }}"

- name: Install gitlab-runner
  ansible.builtin.package:
    name: "{{ gitlab_runner_package }}"
    state: present

- name: Register runner
  when:
    - gitlab_runner_registration_token is defined
  block:
    - name: Get registration status
      ansible.builtin.command:
        cmd: gitlab-runner list
      register: gitlab_runner_get_registration_status
      changed_when: no

    - name: Register gitlab runner
      ansible.builtin.command:
        cmd: >
          gitlab-runner register --non-interactive
          --name "{{ gitlab_runner_name }}"
          --url "{{ gitlab_runner_url }}"
          --token "{{ gitlab_runner_registration_token }}"
          --tag-list "{{ gitlab_runner_tags | join(',') }}"
          --executor "{{ gitlab_runner_executor }}"
          --docker-image "{{ gitlab_runner_docker_image }}"
          --docker-privileged
          --docker-volumes /var/run/docker.sock:/var/run/docker.sock
          --locked="false"
          --request-concurrency "{{ gitlab_runner_concurrency }}"
      changed_when: yes
      when:
        - gitlab_runner_name not in gitlab_runner_get_registration_status.stderr

- name: Start and enable gitlab-runner
  ansible.builtin.service:
    name: "{{ gitlab_runner_service }}"
    state: started
    enabled: yes
