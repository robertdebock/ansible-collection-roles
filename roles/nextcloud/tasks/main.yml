---
# tasks file for nextcloud

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install requirements
  ansible.builtin.package:
    name: "{{ nextcloud_requirements }}"
    state: present

- name: Place apache configuration
  ansible.builtin.template:
    src: nextcloud.conf.j2
    dest: "{{ nextcloud_config_directory }}/nextcloud.conf"
    mode: "0644"

- name: Modify selinux settings
  ansible.posix.seboolean:
    name: "{{ item }}"
    state: true
    persistent: true
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
  loop: "{{ nextcloud_sebooleans }}"

- name: Install nextcloud
  ansible.builtin.unarchive:
    src: "{{ nextcloud_archive }}"
    dest: "{{ nextcloud_destination }}"
    remote_src: true
    owner: "{{ nextcloud_httpd_owner }}"
    group: "{{ nextcloud_httpd_group }}"
    creates: "{{ nextcloud_destination }}/nextcloud/occ"
    mode: "0775"

- name: Configure nextcloud
  ansible.builtin.command:
    cmd: "{{ nextcloud_command }}"
    creates: "{{ nextcloud_destination }}/nextcloud/data/index.html"
    chdir: "{{ nextcloud_destination }}/nextcloud"
  # no_log: true
  become: true
  become_user: "{{ nextcloud_httpd_owner }}"
  notify:
    - Set memcache.distributed
    - Set redis host
    - Set redis port
    - Set trusted domains
    - Set permissions
    - Add missing indices
    - Restart httpd

- name: Install nextcloud app
  ansible.builtin.command:
    cmd: php occ app:install {{ item.name }}
    chdir: "{{ nextcloud_destination }}/nextcloud"
    creates: "{{ nextcloud_destination }}/nextcloud/apps/{{ item.name }}"
  become: true
  become_user: "{{ nextcloud_httpd_owner }}"
  loop: "{{ nextcloud_apps }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - nextcloud_apps is defined
  notify:
    - Set permissions

- name: Include parameters
  ansible.builtin.include_tasks:
    file: parameters.yml
  loop: "{{ nextcloud_settings }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - nextcloud_settings is defined

- name: Setup crontab
  ansible.builtin.cron:
    name: nextcloud
    minute: "*/5"
    hour: "*"
    job: "php {{ nextcloud_destination }}/nextcloud/occ system:cron"
    user: "{{ nextcloud_httpd_owner }}"
